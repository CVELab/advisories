{
    "id": "bundle--19be8c99-b8c5-4068-aad4-4e3f4a395bbf",
    "objects": [
        {
            "created": "2021-03-13T20:12:26.418309Z",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "description": "In Tensorflow before version 2.3.1, the `RaggedCountSparseOutput` implementation does not validate that the input arguments form a valid ragged tensor. In particular, there is no validation that the values in the `splits` tensor generate a valid partitioning of the `values` tensor. Hence, the code is prone to heap buffer overflow. If `split_values` does not end with a value at least `num_values` then the `while` loop condition will trigger a read outside of the bounds of `split_values` once `batch_idx` grows too large. The issue is patched in commit 3cbb917b4714766030b28eba9fb41bb97ce9ee02 and is released in TensorFlow version 2.3.1.",
            "external_references": [
                {
                    "external_id": "CVE-2020-15201",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--16654058-24d6-4dc7-8ce6-76edd5a18690",
            "modified": "2021-11-22T14:54:52.900149Z",
            "name": "CVE-2020-15201",
            "spec_version": "2.1",
            "type": "vulnerability"
        }
    ],
    "type": "bundle"
}