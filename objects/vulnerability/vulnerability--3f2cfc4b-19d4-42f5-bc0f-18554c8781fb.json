{
    "id": "bundle--7f14ecc6-08bc-4f3c-8fbe-fd73e99d6289",
    "objects": [
        {
            "created": "2021-03-13T20:13:33.785498Z",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "description": "An issue was discovered in Asterisk Open Source 11.x before 11.25.1, 13.x before 13.13.1, and 14.x before 14.2.1 and Certified Asterisk 11.x before 11.6-cert16 and 13.x before 13.8-cert4. The chan_sip channel driver has a liberal definition for whitespace when attempting to strip the content between a SIP header name and a colon character. Rather than following RFC 3261 and stripping only spaces and horizontal tabs, Asterisk treats any non-printable ASCII character as if it were whitespace. This means that headers such as Contact\\x01: will be seen as a valid Contact header. This mostly does not pose a problem until Asterisk is placed in tandem with an authenticating SIP proxy. In such a case, a crafty combination of valid and invalid To headers can cause a proxy to allow an INVITE request into Asterisk without authentication since it believes the request is an in-dialog request. However, because of the bug described above, the request will look like an out-of-dialog request to Asterisk. Asterisk will then process the request as a new call. The result is that Asterisk can process calls from unvetted sources without any authentication. If you do not use a proxy for authentication, then this issue does not affect you. If your proxy is dialog-aware (meaning that the proxy keeps track of what dialogs are currently valid), then this issue does not affect you. If you use chan_pjsip instead of chan_sip, then this issue does not affect you.",
            "external_references": [
                {
                    "external_id": "CVE-2016-9938",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--3f2cfc4b-19d4-42f5-bc0f-18554c8781fb",
            "modified": "2021-11-22T14:54:52.900149Z",
            "name": "CVE-2016-9938",
            "spec_version": "2.1",
            "type": "vulnerability"
        }
    ],
    "type": "bundle"
}