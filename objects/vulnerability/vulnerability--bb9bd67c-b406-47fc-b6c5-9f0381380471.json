{
    "type": "bundle",
    "id": "bundle--6fea3816-00c6-4554-b42a-0f3fb4624cd4",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--bb9bd67c-b406-47fc-b6c5-9f0381380471",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-09-18T08:22:09.52874Z",
            "modified": "2024-09-18T08:22:09.52874Z",
            "name": "CVE-2024-46762",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxen: privcmd: Fix possible access to a freed kirqfd instance\n\nNothing prevents simultaneous ioctl calls to privcmd_irqfd_assign() and\nprivcmd_irqfd_deassign(). If that happens, it is possible that a kirqfd\ncreated and added to the irqfds_list by privcmd_irqfd_assign() may get\nremoved by another thread executing privcmd_irqfd_deassign(), while the\nformer is still using it after dropping the locks.\n\nThis can lead to a situation where an already freed kirqfd instance may\nbe accessed and cause kernel oops.\n\nUse SRCU locking to prevent the same, as is done for the KVM\nimplementation for irqfds.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-46762"
                }
            ]
        }
    ]
}