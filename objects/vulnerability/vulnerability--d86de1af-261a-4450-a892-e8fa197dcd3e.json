{
    "type": "bundle",
    "id": "bundle--6fb0309c-bfb2-448f-82b7-4dca81205583",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--d86de1af-261a-4450-a892-e8fa197dcd3e",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2023-10-21T01:04:03.235777Z",
            "modified": "2023-10-21T01:04:03.235777Z",
            "name": "CVE-2023-45677",
            "description": "stb_vorbis is a single file MIT licensed library for processing ogg vorbis files. A crafted file may trigger out of bounds write in `f->vendor[len] = (char)'\\0';`. The root cause is that if `len` read in `start_decoder` is a negative number and `setup_malloc` successfully allocates memory in that case, but memory write is done with a negative index `len`. Similarly if len is INT_MAX the integer overflow len+1 happens in `f->vendor = (char*)setup_malloc(f, sizeof(char) * (len+1));` and `f->comment_list[i] = (char*)setup_malloc(f, sizeof(char) * (len+1));`. This issue may lead to code execution.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2023-45677"
                }
            ]
        }
    ]
}