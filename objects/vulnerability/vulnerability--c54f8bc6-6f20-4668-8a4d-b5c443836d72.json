{
    "id": "bundle--a7a00467-fa22-474a-817a-14f5a1f5d48c",
    "objects": [
        {
            "created": "2021-03-13T20:12:53.454908Z",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "description": "It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(\"java.protocol.handler.pkgs\", \"com.sun.net.ssl.internal.www.protocol\");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",
            "external_references": [
                {
                    "external_id": "CVE-2018-8039",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--c54f8bc6-6f20-4668-8a4d-b5c443836d72",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "CVE-2018-8039",
            "spec_version": "2.1",
            "type": "vulnerability"
        }
    ],
    "type": "bundle"
}