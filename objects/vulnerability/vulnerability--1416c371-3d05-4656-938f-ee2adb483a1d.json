{
    "type": "bundle",
    "id": "bundle--1de6d5d6-5405-4075-b022-3e5ff09f13cf",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--1416c371-3d05-4656-938f-ee2adb483a1d",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-11-08T06:27:16.867423Z",
            "modified": "2024-11-08T06:27:16.867423Z",
            "name": "CVE-2024-50174",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/panthor: Fix race when converting group handle to group object\n\nXArray provides it's own internal lock which protects the internal array\nwhen entries are being simultaneously added and removed. However there\nis still a race between retrieving the pointer from the XArray and\nincrementing the reference count.\n\nTo avoid this race simply hold the internal XArray lock when\nincrementing the reference count, this ensures there cannot be a racing\ncall to xa_erase().",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-50174"
                }
            ]
        }
    ]
}