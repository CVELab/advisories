{
    "type": "bundle",
    "id": "bundle--31e25354-65d2-4fa6-95d8-1808e8c1afc4",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--162e7099-d028-4d23-bda3-736af7511638",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-05-15T18:30:56.012472Z",
            "modified": "2025-05-15T18:30:56.012472Z",
            "name": "CVE-2025-47285",
            "description": "Vyper is the Pythonic Programming Language for the Ethereum Virtual Machine. In versions up to and including 0.4.2rc1, `concat()` may skip evaluation of side effects when the length of an argument is zero. This is due to a fastpath in the implementation which skips evaluation of argument expressions when their length is zero. In practice, it would be very unusual in user code to construct zero-length bytestrings using an expression with side-effects, since zero-length bytestrings are typically constructed with the empty literal `b\"\"`; the only way to construct an empty bytestring which has side effects would be with the ternary operator introduced in v0.3.8, e.g. `b\"\" if self.do_some_side_effect() else b\"\"`. The fix is available in pull request 4644 and expected to be part of the 0.4.2 release. As a workaround, don't have side effects in expressions which construct zero-length bytestrings.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2025-47285"
                }
            ]
        }
    ]
}