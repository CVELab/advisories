{
    "id": "bundle--022bff74-23b7-4a35-8c8f-a6f259ea51d0",
    "objects": [
        {
            "created": "2021-03-13T20:13:08.142562Z",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "description": "A heap use-after-free flaw was found in curl versions from 7.59.0 through 7.61.1 in the code related to closing an easy handle. When closing and cleaning up an 'easy' handle in the `Curl_close()` function, the library code first frees a struct (without nulling the pointer) and might then subsequently erroneously write to a struct field within that already freed struct.",
            "external_references": [
                {
                    "external_id": "CVE-2018-16840",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--41f2d0d8-fad2-4414-a0ff-138fec28e1fc",
            "modified": "2021-11-22T14:54:52.900149Z",
            "name": "CVE-2018-16840",
            "spec_version": "2.1",
            "type": "vulnerability"
        }
    ],
    "type": "bundle"
}