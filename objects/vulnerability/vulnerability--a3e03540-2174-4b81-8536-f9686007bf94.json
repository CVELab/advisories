{
    "type": "bundle",
    "id": "bundle--0734dbb9-8c3a-4b46-b04a-38b1f02c0f99",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--a3e03540-2174-4b81-8536-f9686007bf94",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2023-05-30T04:18:30.148495Z",
            "modified": "2023-05-30T04:18:30.148495Z",
            "name": "CVE-2023-32691",
            "description": "gost (GO Simple Tunnel) is a simple tunnel written in golang. Sensitive secrets such as passwords, token and API keys should be compared only using a constant-time comparison function. Untrusted input, sourced from a HTTP header, is compared directly with a secret. Since this comparison is not secure, an attacker can mount a side-channel timing attack to guess the password. As a workaround, this can be easily fixed using a constant time comparing function such as `crypto/subtle`'s `ConstantTimeCompare`. \n",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2023-32691"
                }
            ]
        }
    ]
}