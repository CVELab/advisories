{
    "id": "bundle--e81f24f9-eb1f-407a-80cd-e6f6d70aa4b3",
    "objects": [
        {
            "created": "2021-03-13T20:11:24.101534Z",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "description": "Linux kernel: Exploitable memory corruption due to UFO to non-UFO path switch. When building a UFO packet with MSG_MORE __ip_append_data() calls ip_ufo_append_data() to append. However in between two send() calls, the append path can be switched from UFO to non-UFO one, which leads to a memory corruption. In case UFO packet lengths exceeds MTU, copy = maxfraglen - skb->len becomes negative on the non-UFO path and the branch to allocate new skb is taken. This triggers fragmentation and computation of fraggap = skb_prev->len - maxfraglen. Fraggap can exceed MTU, causing copy = datalen - transhdrlen - fraggap to become negative. Subsequently skb_copy_and_csum_bits() writes out-of-bounds. A similar issue is present in IPv6 code. The bug was introduced in e89e9cf539a2 (\"[IPv4/IPv6]: UFO Scatter-gather approach\") on Oct 18 2005.",
            "external_references": [
                {
                    "external_id": "CVE-2017-1000112",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--e1998af2-a89a-43db-a839-f67ae627a121",
            "modified": "2021-11-22T14:54:52.900149Z",
            "name": "CVE-2017-1000112",
            "spec_version": "2.1",
            "type": "vulnerability"
        }
    ],
    "type": "bundle"
}