{
    "type": "bundle",
    "id": "bundle--7edb39b7-b16c-4b82-ac1d-da17a1bddc9e",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--a7f1ec60-f19c-4f30-b85c-73445809cf9a",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-02-26T15:23:18.31645Z",
            "modified": "2025-02-26T15:23:18.31645Z",
            "name": "CVE-2022-49732",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsock: redo the psock vs ULP protection check\n\nCommit 8a59f9d1e3d4 (\"sock: Introduce sk->sk_prot->psock_update_sk_prot()\")\nhas moved the inet_csk_has_ulp(sk) check from sk_psock_init() to\nthe new tcp_bpf_update_proto() function. I'm guessing that this\nwas done to allow creating psocks for non-inet sockets.\n\nUnfortunately the destruction path for psock includes the ULP\nunwind, so we need to fail the sk_psock_init() itself.\nOtherwise if ULP is already present we'll notice that later,\nand call tcp_update_ulp() with the sk_proto of the ULP\nitself, which will most likely result in the ULP looping\nits callbacks.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-49732"
                }
            ]
        }
    ]
}