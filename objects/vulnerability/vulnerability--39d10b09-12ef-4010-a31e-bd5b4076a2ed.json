{
    "type": "bundle",
    "id": "bundle--40c56ef3-b310-432a-a0ed-e82299d28426",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--39d10b09-12ef-4010-a31e-bd5b4076a2ed",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-04-04T15:21:58.336056Z",
            "modified": "2025-04-04T15:21:58.336056Z",
            "name": "CVE-2025-31130",
            "description": "gitoxide is an implementation of git written in Rust. Before 0.42.0, gitoxide uses SHA-1 hash implementations without any collision detection, leaving it vulnerable to hash collision attacks. gitoxide uses the sha1_smol or sha1 crate, both of which implement standard SHA-1 without any mitigations for collision attacks. This means that two distinct Git objects with colliding SHA-1 hashes would break the Git object model and integrity checks when used with gitoxide. This vulnerability is fixed in 0.42.0.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2025-31130"
                }
            ]
        }
    ]
}