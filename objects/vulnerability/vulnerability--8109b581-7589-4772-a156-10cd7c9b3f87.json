{
    "id": "bundle--bf7d261b-9a7d-4109-85ff-3caa5019b3de",
    "objects": [
        {
            "created": "2021-03-13T20:12:10.7134Z",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "description": "The Python \"Flask-Security-Too\" package is used for adding security features to your Flask application. It is an is a independently maintained version of Flask-Security based on the 3.0.0 version of Flask-Security. In Flask-Security-Too from version 3.3.0 and before version 3.4.5, the /login and /change endpoints can return the authenticated user's authentication token in response to a GET request. Since GET requests aren't protected with a CSRF token, this could lead to a malicious 3rd party site acquiring the authentication token. Version 3.4.5 and version 4.0.0 are patched. As a workaround, if you aren't using authentication tokens - you can set the SECURITY_TOKEN_MAX_AGE to \"0\" (seconds) which should make the token unusable.",
            "external_references": [
                {
                    "external_id": "CVE-2021-21241",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--8109b581-7589-4772-a156-10cd7c9b3f87",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "CVE-2021-21241",
            "spec_version": "2.1",
            "type": "vulnerability"
        }
    ],
    "type": "bundle"
}