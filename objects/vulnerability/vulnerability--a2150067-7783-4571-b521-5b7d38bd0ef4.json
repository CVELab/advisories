{
    "type": "bundle",
    "id": "bundle--cdc64ec2-a7cb-4a48-85c4-f7e248058e94",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--a2150067-7783-4571-b521-5b7d38bd0ef4",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-04-17T16:21:35.746035Z",
            "modified": "2024-04-17T16:21:35.746035Z",
            "name": "CVE-2024-26910",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: ipset: fix performance regression in swap operation\n\nThe patch \"netfilter: ipset: fix race condition between swap/destroy\nand kernel side add/del/test\", commit 28628fa9 fixes a race condition.\nBut the synchronize_rcu() added to the swap function unnecessarily slows\nit down: it can safely be moved to destroy and use call_rcu() instead.\n\nEric Dumazet pointed out that simply calling the destroy functions as\nrcu callback does not work: sets with timeout use garbage collectors\nwhich need cancelling at destroy which can wait. Therefore the destroy\nfunctions are split into two: cancelling garbage collectors safely at\nexecuting the command received by netlink and moving the remaining\npart only into the rcu callback.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-26910"
                }
            ]
        }
    ]
}