{
    "id": "bundle--2babf887-a5d7-415c-b9b2-67af0dd6c787",
    "objects": [
        {
            "created": "2021-03-13T20:12:18.987855Z",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "description": "The _encode_invalid_chars function in util/url.py in the urllib3 library 1.25.2 through 1.25.7 for Python allows a denial of service (CPU consumption) because of an inefficient algorithm. The percent_encodings array contains all matches of percent encodings. It is not deduplicated. For a URL of length N, the size of percent_encodings may be up to O(N). The next step (normalize existing percent-encoded bytes) also takes up to O(N) for each step, so the total time is O(N^2). If percent_encodings were deduplicated, the time to compute _encode_invalid_chars would be O(kN), where k is at most 484 ((10+6*2)^2).",
            "external_references": [
                {
                    "external_id": "CVE-2020-7212",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--9d4718d6-1826-4ca0-9d6c-d2ac577c5716",
            "modified": "2021-11-22T14:54:52.900149Z",
            "name": "CVE-2020-7212",
            "spec_version": "2.1",
            "type": "vulnerability"
        }
    ],
    "type": "bundle"
}