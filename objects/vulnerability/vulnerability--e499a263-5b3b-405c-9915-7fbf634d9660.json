{
    "type": "bundle",
    "id": "bundle--722526cd-5729-45e7-9103-268bc136d0f4",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--e499a263-5b3b-405c-9915-7fbf634d9660",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-01-04T21:14:23.152795Z",
            "modified": "2024-01-04T21:14:23.152795Z",
            "name": "CVE-2024-21636",
            "description": "view_component is a framework for building reusable, testable, and encapsulated view components in Ruby on Rails. Versions prior to 3.9.0 have a cross-site scripting vulnerability that has the potential to impact anyone rendering a component directly from a controller with the view_component gem. Note that only components that define a `#call` method (i.e. instead of using a sidecar template) are affected. The return value of the `#call` method is not sanitized and can include user-defined content. In addition, the return value of the `#output_postamble` methodis not sanitized, which can also lead to cross-site scripting issues. Versions 3.9.0 has been released and fully mitigates both the `#call` and the `#output_postamble` vulnerabilities. As a workaround, sanitize the return value of `#call`.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-21636"
                }
            ]
        }
    ]
}