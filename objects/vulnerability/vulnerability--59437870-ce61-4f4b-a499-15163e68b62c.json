{
    "type": "bundle",
    "id": "bundle--e746c060-15b2-491f-a139-206e788374cd",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--59437870-ce61-4f4b-a499-15163e68b62c",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-05-26T15:23:26.295556Z",
            "modified": "2025-05-26T15:23:26.295556Z",
            "name": "CVE-2025-37992",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet_sched: Flush gso_skb list too during ->change()\n\nPreviously, when reducing a qdisc's limit via the ->change() operation, only\nthe main skb queue was trimmed, potentially leaving packets in the gso_skb\nlist. This could result in NULL pointer dereference when we only check\nsch->limit against sch->q.qlen.\n\nThis patch introduces a new helper, qdisc_dequeue_internal(), which ensures\nboth the gso_skb list and the main queue are properly flushed when trimming\nexcess packets. All relevant qdiscs (codel, fq, fq_codel, fq_pie, hhf, pie)\nare updated to use this helper in their ->change() routines.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2025-37992"
                }
            ]
        }
    ]
}