{
    "type": "bundle",
    "id": "bundle--e628715a-193a-4344-9af7-3e1f384c0e76",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--4df0b38a-6914-4f2e-bc3c-9bfdb1d75a8b",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-02-26T03:26:28.624483Z",
            "modified": "2025-02-26T03:26:28.624483Z",
            "name": "CVE-2022-49660",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxen/arm: Fix race in RB-tree based P2M accounting\n\nDuring the PV driver life cycle the mappings are added to\nthe RB-tree by set_foreign_p2m_mapping(), which is called from\ngnttab_map_refs() and are removed by clear_foreign_p2m_mapping()\nwhich is called from gnttab_unmap_refs(). As both functions end\nup calling __set_phys_to_machine_multi() which updates the RB-tree,\nthis function can be called concurrently.\n\nThere is already a \"p2m_lock\" to protect against concurrent accesses,\nbut the problem is that the first read of \"phys_to_mach.rb_node\"\nin __set_phys_to_machine_multi() is not covered by it, so this might\nlead to the incorrect mappings update (removing in our case) in RB-tree.\n\nIn my environment the related issue happens rarely and only when\nPV net backend is running, the xen_add_phys_to_mach_entry() claims\nthat it cannot add new pfn <-> mfn mapping to the tree since it is\nalready exists which results in a failure when mapping foreign pages.\n\nBut there might be other bad consequences related to the non-protected\nroot reads such use-after-free, etc.\n\nWhile at it, also fix the similar usage in __pfn_to_mfn(), so\ninitialize \"struct rb_node *n\" with the \"p2m_lock\" held in both\nfunctions to avoid possible bad consequences.\n\nThis is CVE-2022-33744 / XSA-406.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-49660"
                }
            ]
        }
    ]
}