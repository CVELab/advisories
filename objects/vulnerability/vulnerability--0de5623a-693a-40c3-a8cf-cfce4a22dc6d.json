{
    "type": "bundle",
    "id": "bundle--40b5e3ed-9db0-4311-ae83-7dbd0c5dbd76",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--0de5623a-693a-40c3-a8cf-cfce4a22dc6d",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-02-27T03:27:30.147188Z",
            "modified": "2025-02-27T03:27:30.147188Z",
            "name": "CVE-2024-57953",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nrtc: tps6594: Fix integer overflow on 32bit systems\n\nThe problem is this multiply in tps6594_rtc_set_offset()\n\n\ttmp = offset * TICKS_PER_HOUR;\n\nThe \"tmp\" variable is an s64 but \"offset\" is a long in the\n(-277774)-277774 range.  On 32bit systems a long can hold numbers up to\napproximately two billion.  The number of TICKS_PER_HOUR is really large,\n(32768 * 3600) or roughly a hundred million.  When you start multiplying\nby a hundred million it doesn't take long to overflow the two billion\nmark.\n\nProbably the safest way to fix this is to change the type of\nTICKS_PER_HOUR to long long because it's such a large number.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-57953"
                }
            ]
        }
    ]
}