{
    "type": "bundle",
    "id": "bundle--f9d660db-345d-4be2-9aea-048879848bf3",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--d6c13184-972e-4dde-a125-524ebce753ba",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2023-02-14T00:05:05.633286Z",
            "modified": "2023-02-14T00:05:05.633286Z",
            "name": "CVE-2023-25572",
            "description": "react-admin is a frontend framework for building browser applications on top of REST/GraphQL APIs. react-admin prior to versions 3.19.12 and 4.7.6, along with ra-ui-materialui prior to 3.19.12 and 4.7.6, are vulnerable to cross-site scripting. All React applications built with react-admin and using the `<RichTextField>` are affected. `<RichTextField>` outputs the field value using `dangerouslySetInnerHTML` without client-side sanitization. If the data isn't sanitized server-side, this opens a possible cross-site scripting (XSS) attack. Versions 3.19.12 and 4.7.6 now use `DOMPurify` to escape the HTML before outputting it with React and `dangerouslySetInnerHTML`. Users who already sanitize HTML data server-side do not need to upgrade. As a workaround, users may replace the `<RichTextField>` by a custom field doing sanitization by hand.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2023-25572"
                }
            ]
        }
    ]
}