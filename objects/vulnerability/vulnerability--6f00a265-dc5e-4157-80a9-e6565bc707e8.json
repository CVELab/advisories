{
    "type": "bundle",
    "id": "bundle--962af436-26af-43de-845d-4ce7090eb6c0",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--6f00a265-dc5e-4157-80a9-e6565bc707e8",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-02-26T18:18:58.33087Z",
            "modified": "2024-02-26T18:18:58.33087Z",
            "name": "CVE-2021-46906",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: usbhid: fix info leak in hid_submit_ctrl\n\nIn hid_submit_ctrl(), the way of calculating the report length doesn't\ntake into account that report->size can be zero. When running the\nsyzkaller reproducer, a report of size 0 causes hid_submit_ctrl) to\ncalculate transfer_buffer_length as 16384. When this urb is passed to\nthe usb core layer, KMSAN reports an info leak of 16384 bytes.\n\nTo fix this, first modify hid_report_len() to account for the zero\nreport size case by using DIV_ROUND_UP for the division. Then, call it\nfrom hid_submit_ctrl().",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2021-46906"
                }
            ]
        }
    ]
}