{
    "id": "bundle--5e960e85-83a0-4834-b8c2-751686ec94ac",
    "objects": [
        {
            "created": "2021-03-13T20:12:59.287224Z",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "description": "http.cookiejar.DefaultPolicy.domain_return_ok in Lib/http/cookiejar.py in Python before 3.7.3 does not correctly validate the domain: it can be tricked into sending existing cookies to the wrong server. An attacker may abuse this flaw by using a server with a hostname that has another valid hostname as a suffix (e.g., pythonicexample.com to steal cookies for example.com). When a program uses http.cookiejar.DefaultPolicy and tries to do an HTTP connection to an attacker-controlled server, existing cookies can be leaked to the attacker. This affects 2.x through 2.7.16, 3.x before 3.4.10, 3.5.x before 3.5.7, 3.6.x before 3.6.9, and 3.7.x before 3.7.3.",
            "external_references": [
                {
                    "external_id": "CVE-2018-20852",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--e8111783-8ddc-42ce-8d96-064794cf3b1b",
            "modified": "2021-11-22T14:54:52.900149Z",
            "name": "CVE-2018-20852",
            "spec_version": "2.1",
            "type": "vulnerability"
        }
    ],
    "type": "bundle"
}