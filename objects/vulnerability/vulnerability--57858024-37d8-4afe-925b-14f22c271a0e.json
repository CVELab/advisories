{
    "type": "bundle",
    "id": "bundle--e6cbe73b-d81b-4af0-8162-d127f0986c62",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--57858024-37d8-4afe-925b-14f22c271a0e",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-03-02T22:14:19.855854Z",
            "modified": "2024-03-02T22:14:19.855854Z",
            "name": "CVE-2023-52569",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: remove BUG() after failure to insert delayed dir index item\n\nInstead of calling BUG() when we fail to insert a delayed dir index item\ninto the delayed node's tree, we can just release all the resources we\nhave allocated/acquired before and return the error to the caller. This is\nfine because all existing call chains undo anything they have done before\ncalling btrfs_insert_delayed_dir_index() or BUG_ON (when creating pending\nsnapshots in the transaction commit path).\n\nSo remove the BUG() call and do proper error handling.\n\nThis relates to a syzbot report linked below, but does not fix it because\nit only prevents hitting a BUG(), it does not fix the issue where somehow\nwe attempt to use twice the same index number for different index items.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2023-52569"
                }
            ]
        }
    ]
}