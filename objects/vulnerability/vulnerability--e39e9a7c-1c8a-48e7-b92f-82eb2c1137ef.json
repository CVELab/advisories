{
    "type": "bundle",
    "id": "bundle--8c11171a-c674-46bb-b1c3-f27e4ef1b84e",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--e39e9a7c-1c8a-48e7-b92f-82eb2c1137ef",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-05-30T18:30:27.697173Z",
            "modified": "2025-05-30T18:30:27.697173Z",
            "name": "CVE-2025-5054",
            "description": "Race condition in Canonical apport up to and including 2.32.0 allows a local attacker to leak sensitive information via PID-reuse by leveraging namespaces.\n\n\n\n\nWhen handling a crash, the function `_check_global_pid_and_forward`, which detects if the crashing process resided in a container, was being called before `consistency_checks`, which attempts to detect if the crashing process had been replaced. Because of this, if a process crashed and was quickly replaced with a containerized one, apport could be made to forward the core dump to the container, potentially leaking sensitive information. `consistency_checks` is now being called before `_check_global_pid_and_forward`. Additionally, given that the PID-reuse race condition cannot be reliably detected from userspace alone, crashes are only forwarded to containers if the kernel provided a pidfd, or if the crashing process was unprivileged (i.e., if dump mode == 1).",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2025-5054"
                }
            ]
        }
    ]
}