{
    "id": "bundle--bf87c986-177b-4464-8d37-8445ec14120b",
    "objects": [
        {
            "created": "2021-09-22T00:22:38.62014Z",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "description": "in-toto-golang is a go implementation of the in-toto framework to protect software supply chain integrity. In affected versions authenticated attackers posing as functionaries (i.e., within a trusted set of users for a layout) are able to create attestations that may bypass DISALLOW rules in the same layout. An attacker with access to trusted private keys, may issue an attestation that contains a disallowed artifact by including path traversal semantics (e.g., foo vs dir/../foo). Exploiting this vulnerability is dependent on the specific policy applied. The problem has been fixed in version 0.3.0.",
            "external_references": [
                {
                    "external_id": "CVE-2021-41087",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--bfc903c0-c465-4093-8d13-5157d6619c07",
            "modified": "2021-11-22T14:54:52.900149Z",
            "name": "CVE-2021-41087",
            "spec_version": "2.1",
            "type": "vulnerability"
        }
    ],
    "type": "bundle"
}