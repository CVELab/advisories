{
    "id": "bundle--869b82ba-19ce-4835-9849-098a6d74b402",
    "objects": [
        {
            "created": "2021-03-13T20:12:10.691507Z",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "description": "angular-expressions is \"angular's nicest part extracted as a standalone module for the browser and node\". In angular-expressions before version 1.1.2 there is a vulnerability which allows Remote Code Execution if you call \"expressions.compile(userControlledInput)\" where \"userControlledInput\" is text that comes from user input. The security of the package could be bypassed by using a more complex payload, using a \".constructor.constructor\" technique. In terms of impact: If running angular-expressions in the browser, an attacker could run any browser script when the application code calls expressions.compile(userControlledInput). If running angular-expressions on the server, an attacker could run any Javascript expression, thus gaining Remote Code Execution. This is fixed in version 1.1.2 of angular-expressions A temporary workaround might be either to disable user-controlled input that will be fed into angular-expressions in your application or allow only following characters in the userControlledInput.",
            "external_references": [
                {
                    "external_id": "CVE-2021-21277",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--54490563-c7ad-4736-8732-6611a684a184",
            "modified": "2021-11-22T14:54:52.900149Z",
            "name": "CVE-2021-21277",
            "spec_version": "2.1",
            "type": "vulnerability"
        }
    ],
    "type": "bundle"
}