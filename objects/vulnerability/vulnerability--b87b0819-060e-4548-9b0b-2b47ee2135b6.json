{
    "type": "bundle",
    "id": "bundle--f4b6d5f7-7fac-4507-8105-c3cde0cd70c5",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--b87b0819-060e-4548-9b0b-2b47ee2135b6",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-05-21T16:20:16.988563Z",
            "modified": "2024-05-21T16:20:16.988563Z",
            "name": "CVE-2021-47421",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: handle the case of pci_channel_io_frozen only in amdgpu_pci_resume\n\nIn current code, when a PCI error state pci_channel_io_normal is detectd,\nit will report PCI_ERS_RESULT_CAN_RECOVER status to PCI driver, and PCI\ndriver will continue the execution of PCI resume callback report_resume by\npci_walk_bridge, and the callback will go into amdgpu_pci_resume\nfinally, where write lock is releasd unconditionally without acquiring\nsuch lock first. In this case, a deadlock will happen when other threads\nstart to acquire the read lock.\n\nTo fix this, add a member in amdgpu_device strucutre to cache\npci_channel_state, and only continue the execution in amdgpu_pci_resume\nwhen it's pci_channel_io_frozen.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2021-47421"
                }
            ]
        }
    ]
}