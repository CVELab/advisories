{
    "id": "bundle--e4842020-f002-4401-862f-05895c2b735a",
    "objects": [
        {
            "created": "2021-03-13T20:12:06.445903Z",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "description": "If an application encounters a fatal protocol error and then calls SSL_shutdown() twice (once to send a close_notify, and once to receive one) then OpenSSL can respond differently to the calling application if a 0 byte record is received with invalid padding compared to if a 0 byte record is received with an invalid MAC. If the application then behaves differently based on that in a way that is detectable to the remote peer, then this amounts to a padding oracle that could be used to decrypt data. In order for this to be exploitable \"non-stitched\" ciphersuites must be in use. Stitched ciphersuites are optimised implementations of certain commonly used ciphersuites. Also the application must call SSL_shutdown() twice even if a protocol error has occurred (applications should not do this but some do anyway). Fixed in OpenSSL 1.0.2r (Affected 1.0.2-1.0.2q).",
            "external_references": [
                {
                    "external_id": "CVE-2019-1559",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--f6010bb0-289d-4a4c-ada3-1bf7e4171421",
            "modified": "2021-11-22T14:54:52.900149Z",
            "name": "CVE-2019-1559",
            "spec_version": "2.1",
            "type": "vulnerability"
        }
    ],
    "type": "bundle"
}