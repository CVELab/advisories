{
    "type": "bundle",
    "id": "bundle--5a89fcf0-8895-4704-9cb6-c6c140afe4bc",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--b78c89ef-3b8e-48e1-a9c5-6150f61e155f",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-03-02T22:14:19.882011Z",
            "modified": "2024-03-02T22:14:19.882011Z",
            "name": "CVE-2023-52503",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntee: amdtee: fix use-after-free vulnerability in amdtee_close_session\n\nThere is a potential race condition in amdtee_close_session that may\ncause use-after-free in amdtee_open_session. For instance, if a session\nhas refcount == 1, and one thread tries to free this session via:\n\n    kref_put(&sess->refcount, destroy_session);\n\nthe reference count will get decremented, and the next step would be to\ncall destroy_session(). However, if in another thread,\namdtee_open_session() is called before destroy_session() has completed\nexecution, alloc_session() may return 'sess' that will be freed up\nlater in destroy_session() leading to use-after-free in\namdtee_open_session.\n\nTo fix this issue, treat decrement of sess->refcount and removal of\n'sess' from session list in destroy_session() as a critical section, so\nthat it is executed atomically.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2023-52503"
                }
            ]
        }
    ]
}