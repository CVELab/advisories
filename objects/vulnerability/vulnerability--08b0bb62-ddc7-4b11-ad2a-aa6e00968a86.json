{
    "type": "bundle",
    "id": "bundle--e871c896-c31a-4ce6-8643-2d1ed4395e69",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--08b0bb62-ddc7-4b11-ad2a-aa6e00968a86",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2022-07-12T00:05:05.031505Z",
            "modified": "2022-07-12T00:05:05.031505Z",
            "name": "CVE-2022-31139",
            "description": "UnsafeAccessor (UA) is a bridge to access jdk.internal.misc.Unsafe & sun.misc.Unsafe. Normally, if UA is loaded as a named module, the internal data of UA is protected by JVM and others can only access UA via UA's standard API. The main application can set up `SecurityCheck.AccessLimiter` for UA to limit access to UA. Starting with version 1.4.0 and prior to version 1.7.0, when `SecurityCheck.AccessLimiter` is set up, untrusted code can access UA without limitation, even when UA is loaded as a named module. This issue does not affect those for whom `SecurityCheck.AccessLimiter` is not set up. Version 1.7.0 contains a patch.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-31139"
                }
            ]
        }
    ]
}