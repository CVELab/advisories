{
    "id": "bundle--7a7191ea-9013-49c5-b236-e4d6c2867ae2",
    "objects": [
        {
            "created": "2021-03-13T20:11:44.33554Z",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "description": "An issue was discovered in can_can_gw_rcv in net/can/gw.c in the Linux kernel through 4.19.13. The CAN frame modification rules allow bitwise logical operations that can be also applied to the can_dlc field. The privileged user \"root\" with CAP_NET_ADMIN can create a CAN frame modification rule that makes the data length code a higher value than the available CAN frame data size. In combination with a configured checksum calculation where the result is stored relatively to the end of the data (e.g. cgw_csum_xor_rel) the tail of the skb (e.g. frag_list pointer in skb_shared_info) can be rewritten which finally can cause a system crash. Because of a missing check, the CAN drivers may write arbitrary content beyond the data registers in the CAN controller's I/O memory when processing can-gw manipulated outgoing frames.",
            "external_references": [
                {
                    "external_id": "CVE-2019-3701",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--e50baf85-5908-4e80-bdaa-f4c84a5935d6",
            "modified": "2021-11-22T14:54:52.900149Z",
            "name": "CVE-2019-3701",
            "spec_version": "2.1",
            "type": "vulnerability"
        }
    ],
    "type": "bundle"
}