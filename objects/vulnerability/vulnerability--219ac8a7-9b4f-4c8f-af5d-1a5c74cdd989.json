{
    "type": "bundle",
    "id": "bundle--f976d0ea-9433-4f7b-93b6-80182128f7b8",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--219ac8a7-9b4f-4c8f-af5d-1a5c74cdd989",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-03-02T22:14:19.884957Z",
            "modified": "2024-03-02T22:14:19.884957Z",
            "name": "CVE-2023-52510",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nieee802154: ca8210: Fix a potential UAF in ca8210_probe\n\nIf of_clk_add_provider() fails in ca8210_register_ext_clock(),\nit calls clk_unregister() to release priv->clk and returns an\nerror. However, the caller ca8210_probe() then calls ca8210_remove(),\nwhere priv->clk is freed again in ca8210_unregister_ext_clock(). In\nthis case, a use-after-free may happen in the second time we call\nclk_unregister().\n\nFix this by removing the first clk_unregister(). Also, priv->clk could\nbe an error code on failure of clk_register_fixed_rate(). Use\nIS_ERR_OR_NULL to catch this case in ca8210_unregister_ext_clock().",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2023-52510"
                }
            ]
        }
    ]
}