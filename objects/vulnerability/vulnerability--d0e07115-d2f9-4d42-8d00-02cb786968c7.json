{
    "type": "bundle",
    "id": "bundle--b62eb5b4-392f-4f5f-afff-8b315b6ce752",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--d0e07115-d2f9-4d42-8d00-02cb786968c7",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-12-29T03:30:00.295957Z",
            "modified": "2024-12-29T03:30:00.295957Z",
            "name": "CVE-2024-56532",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: us122l: Use snd_card_free_when_closed() at disconnection\n\nThe USB disconnect callback is supposed to be short and not too-long\nwaiting.  OTOH, the current code uses snd_card_free() at\ndisconnection, but this waits for the close of all used fds, hence it\ncan take long.  It eventually blocks the upper layer USB ioctls, which\nmay trigger a soft lockup.\n\nAn easy workaround is to replace snd_card_free() with\nsnd_card_free_when_closed().  This variant returns immediately while\nthe release of resources is done asynchronously by the card device\nrelease at the last close.\n\nThe loop of us122l->mmap_count check is dropped as well.  The check is\nuseless for the asynchronous operation with *_when_closed().",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-56532"
                }
            ]
        }
    ]
}