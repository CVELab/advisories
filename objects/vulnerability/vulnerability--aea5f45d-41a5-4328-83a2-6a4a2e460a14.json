{
    "type": "bundle",
    "id": "bundle--477067ff-bad5-4cb3-bb2d-f3ba3b657746",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--aea5f45d-41a5-4328-83a2-6a4a2e460a14",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-04-08T14:21:38.034311Z",
            "modified": "2025-04-08T14:21:38.034311Z",
            "name": "CVE-2025-31498",
            "description": "c-ares is an asynchronous resolver library. From 1.32.3 through 1.34.4, there is a use-after-free in read_answers() when process_answer() may re-enqueue a query either due to a DNS Cookie Failure or when the upstream server does not properly support EDNS, or possibly on TCP queries if the remote closed the connection immediately after a response. If there was an issue trying to put that new transaction on the wire, it would close the connection handle, but read_answers() was still expecting the connection handle to be available to possibly dequeue other responses. In theory a remote attacker might be able to trigger this by flooding the target with ICMP UNREACHABLE packets if they also control the upstream nameserver and can return a result with one of those conditions, this has been untested. Otherwise only a local attacker might be able to change system behavior to make send()/write() return a failure condition. This vulnerability is fixed in 1.34.5.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2025-31498"
                }
            ]
        }
    ]
}