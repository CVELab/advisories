{
    "type": "bundle",
    "id": "bundle--adc655e3-f592-46f3-8fe5-8e7aecc15346",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--8c05d9ae-f6bc-4567-9dd4-75973d0f1db5",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-07-16T12:32:52.468704Z",
            "modified": "2024-07-16T12:32:52.468704Z",
            "name": "CVE-2022-48819",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: take care of mixed splice()/sendmsg(MSG_ZEROCOPY) case\n\nsyzbot found that mixing sendpage() and sendmsg(MSG_ZEROCOPY)\ncalls over the same TCP socket would again trigger the\ninfamous warning in inet_sock_destruct()\n\n\tWARN_ON(sk_forward_alloc_get(sk));\n\nWhile Talal took into account a mix of regular copied data\nand MSG_ZEROCOPY one in the same skb, the sendpage() path\nhas been forgotten.\n\nWe want the charging to happen for sendpage(), because\npages could be coming from a pipe. What is missing is the\ndowngrading of pure zerocopy status to make sure\nsk_forward_alloc will stay synced.\n\nAdd tcp_downgrade_zcopy_pure() helper so that we can\nuse it from the two callers.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-48819"
                }
            ]
        }
    ]
}