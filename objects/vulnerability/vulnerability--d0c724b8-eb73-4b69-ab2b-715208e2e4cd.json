{
    "type": "bundle",
    "id": "bundle--4f828c54-f41f-465b-9f37-536641569bbd",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--d0c724b8-eb73-4b69-ab2b-715208e2e4cd",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2022-08-14T00:05:53.756327Z",
            "modified": "2022-08-14T00:05:53.756327Z",
            "name": "CVE-2022-35948",
            "description": "undici is an HTTP/1.1 client, written from scratch for Node.js.`=< undici@5.8.0` users are vulnerable to _CRLF Injection_ on headers when using unsanitized input as request headers, more specifically, inside the `content-type` header. Example: ``` import { request } from 'undici' const unsanitizedContentTypeInput = 'application/json\\r\\n\\r\\nGET /foo2 HTTP/1.1' await request('http://localhost:3000, { method: 'GET', headers: { 'content-type': unsanitizedContentTypeInput }, }) ``` The above snippet will perform two requests in a single `request` API call: 1) `http://localhost:3000/` 2) `http://localhost:3000/foo2` This issue was patched in Undici v5.8.1. Sanitize input when sending content-type headers using user input as a workaround.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-35948"
                }
            ]
        }
    ]
}