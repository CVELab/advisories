{
    "id": "bundle--5a26cc91-2275-4aab-8c6e-0ae84f83fcb1",
    "objects": [
        {
            "created": "2021-03-26T14:44:57.506979Z",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "description": "Nanopb is a small code-size Protocol Buffers implementation in ansi C. In Nanopb before versions 0.3.9.8 and 0.4.5, decoding a specifically formed message can cause invalid `free()` or `realloc()` calls if the message type contains an `oneof` field, and the `oneof` directly contains both a pointer field and a non-pointer field. If the message data first contains the non-pointer field and then the pointer field, the data of the non-pointer field is incorrectly treated as if it was a pointer value. Such message data rarely occurs in normal messages, but it is a concern when untrusted data is parsed. This has been fixed in versions 0.3.9.8 and 0.4.5. See referenced GitHub Security Advisory for more information including workarounds.",
            "external_references": [
                {
                    "external_id": "CVE-2021-21401",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--8bd2226b-1948-47c5-b1a2-3153821cfca2",
            "modified": "2021-11-22T14:54:52.900149Z",
            "name": "CVE-2021-21401",
            "spec_version": "2.1",
            "type": "vulnerability"
        }
    ],
    "type": "bundle"
}