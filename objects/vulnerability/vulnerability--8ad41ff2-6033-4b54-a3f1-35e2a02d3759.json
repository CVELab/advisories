{
    "type": "bundle",
    "id": "bundle--376edf15-0834-44d7-9095-2ea82216415a",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--8ad41ff2-6033-4b54-a3f1-35e2a02d3759",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-05-21T15:17:46.26267Z",
            "modified": "2024-05-21T15:17:46.26267Z",
            "name": "CVE-2021-47294",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetrom: Decrease sock refcount when sock timers expire\n\nCommit 63346650c1a9 (\"netrom: switch to sock timer API\") switched to use\nsock timer API. It replaces mod_timer() by sk_reset_timer(), and\ndel_timer() by sk_stop_timer().\n\nFunction sk_reset_timer() will increase the refcount of sock if it is\ncalled on an inactive timer, hence, in case the timer expires, we need to\ndecrease the refcount ourselves in the handler, otherwise, the sock\nrefcount will be unbalanced and the sock will never be freed.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2021-47294"
                }
            ]
        }
    ]
}