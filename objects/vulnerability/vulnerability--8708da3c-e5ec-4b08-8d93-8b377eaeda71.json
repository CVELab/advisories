{
    "type": "bundle",
    "id": "bundle--2da19d6a-f766-467c-9a40-ce0c25f7fd32",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--8708da3c-e5ec-4b08-8d93-8b377eaeda71",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-05-14T20:18:23.381951Z",
            "modified": "2024-05-14T20:18:23.381951Z",
            "name": "CVE-2024-32465",
            "description": "Git is a revision control system. The Git project recommends to avoid working in untrusted repositories, and instead to clone it first with `git clone --no-local` to obtain a clean copy. Git has specific protections to make that a safe operation even with an untrusted source repository, but vulnerabilities allow those protections to be bypassed. In the context of cloning local repositories owned by other users, this vulnerability has been covered in CVE-2024-32004. But there are circumstances where the fixes for CVE-2024-32004 are not enough: For example, when obtaining a `.zip` file containing a full copy of a Git repository, it should not be trusted by default to be safe, as e.g. hooks could be configured to run within the context of that repository. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. As a workaround, avoid using Git in repositories that have been obtained via archives from untrusted sources.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-32465"
                }
            ]
        }
    ]
}