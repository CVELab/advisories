{
    "type": "bundle",
    "id": "bundle--44b075ec-a7b0-44e9-b91f-44d573779892",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--0031c021-53c4-4254-a934-482071aa0d02",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-02-26T02:52:57.759651Z",
            "modified": "2025-02-26T02:52:57.759651Z",
            "name": "CVE-2022-49181",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxen: fix is_xen_pmu()\n\nis_xen_pmu() is taking the cpu number as parameter, but it is not using\nit. Instead it just tests whether the Xen PMU initialization on the\ncurrent cpu did succeed. As this test is done by checking a percpu\npointer, preemption needs to be disabled in order to avoid switching\nthe cpu while doing the test. While resuming from suspend() this seems\nnot to be the case:\n\n[   88.082751] ACPI: PM: Low-level resume complete\n[   88.087933] ACPI: EC: EC started\n[   88.091464] ACPI: PM: Restoring platform NVS memory\n[   88.097166] xen_acpi_processor: Uploading Xen processor PM info\n[   88.103850] Enabling non-boot CPUs ...\n[   88.108128] installing Xen timer for CPU 1\n[   88.112763] BUG: using smp_processor_id() in preemptible [00000000] code: systemd-sleep/7138\n[   88.122256] caller is is_xen_pmu+0x12/0x30\n[   88.126937] CPU: 0 PID: 7138 Comm: systemd-sleep Tainted: G        W         5.16.13-2.fc32.qubes.x86_64 #1\n[   88.137939] Hardware name: Star Labs StarBook/StarBook, BIOS 7.97 03/21/2022\n[   88.145930] Call Trace:\n[   88.148757]  <TASK>\n[   88.151193]  dump_stack_lvl+0x48/0x5e\n[   88.155381]  check_preemption_disabled+0xde/0xe0\n[   88.160641]  is_xen_pmu+0x12/0x30\n[   88.164441]  xen_smp_intr_init_pv+0x75/0x100\n\nFix that by replacing is_xen_pmu() by a simple boolean variable which\nreflects the Xen PMU initialization state on cpu 0.\n\nModify xen_pmu_init() to return early in case it is being called for a\ncpu other than cpu 0 and the boolean variable not being set.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-49181"
                }
            ]
        }
    ]
}