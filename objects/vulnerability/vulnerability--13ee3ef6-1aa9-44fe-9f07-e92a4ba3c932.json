{
    "type": "bundle",
    "id": "bundle--7e19be4f-892a-48c1-91d3-ea24bfb886d2",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--13ee3ef6-1aa9-44fe-9f07-e92a4ba3c932",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-06-17T20:16:03.17915Z",
            "modified": "2024-06-17T20:16:03.17915Z",
            "name": "CVE-2024-37890",
            "description": "ws is an open source WebSocket client and server for Node.js. A request with a number of headers exceeding theserver.maxHeadersCount threshold could be used to crash a ws server. The vulnerability was fixed in ws@8.17.1 (e55e510) and backported to ws@7.5.10 (22c2876), ws@6.2.3 (eeb76d3), and ws@5.2.4 (4abd8f6). In vulnerable versions of ws, the issue can be mitigated in the following ways: 1. Reduce the maximum allowed length of the request headers using the --max-http-header-size=size and/or the maxHeaderSize options so that no more headers than the server.maxHeadersCount limit can be sent. 2. Set server.maxHeadersCount to 0 so that no limit is applied.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-37890"
                }
            ]
        }
    ]
}