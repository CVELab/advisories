{
    "type": "bundle",
    "id": "bundle--3f1be1ba-1072-45e0-a11e-cbb23022b7f7",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--0cdd842a-d857-444b-a96c-5ea6c5d3d74c",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-08-19T05:17:55.998704Z",
            "modified": "2024-08-19T05:17:55.998704Z",
            "name": "CVE-2024-43830",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nleds: trigger: Unregister sysfs attributes before calling deactivate()\n\nTriggers which have trigger specific sysfs attributes typically store\nrelated data in trigger-data allocated by the activate() callback and\nfreed by the deactivate() callback.\n\nCalling device_remove_groups() after calling deactivate() leaves a window\nwhere the sysfs attributes show/store functions could be called after\ndeactivation and then operate on the just freed trigger-data.\n\nMove the device_remove_groups() call to before deactivate() to close\nthis race window.\n\nThis also makes the deactivation path properly do things in reverse order\nof the activation path which calls the activate() callback before calling\ndevice_add_groups().",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-43830"
                }
            ]
        }
    ]
}