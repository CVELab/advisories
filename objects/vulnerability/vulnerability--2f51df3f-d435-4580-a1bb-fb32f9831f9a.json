{
    "type": "bundle",
    "id": "bundle--fc6622ed-2f22-421d-b43e-15df053af1a6",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--2f51df3f-d435-4580-a1bb-fb32f9831f9a",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-07-30T08:21:49.897756Z",
            "modified": "2024-07-30T08:21:49.897756Z",
            "name": "CVE-2024-42141",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: ISO: Check socket flag instead of hcon\n\nThis fixes the following Smatch static checker warning:\n\nnet/bluetooth/iso.c:1364 iso_sock_recvmsg()\nerror: we previously assumed 'pi->conn->hcon' could be null (line 1359)\n\nnet/bluetooth/iso.c\n1347 static int iso_sock_recvmsg(struct socket *sock, struct msghdr *msg,\n1348                             size_t len, int flags)\n1349 {\n1350         struct sock *sk = sock->sk;\n1351         struct iso_pinfo *pi = iso_pi(sk);\n1352\n1353         BT_DBG(\"sk %p\", sk);\n1354\n1355         if (test_and_clear_bit(BT_SK_DEFER_SETUP,\n                                      &bt_sk(sk)->flags)) {\n1356                 lock_sock(sk);\n1357                 switch (sk->sk_state) {\n1358                 case BT_CONNECT2:\n1359                         if (pi->conn->hcon &&\n                                     ^^^^^^^^^^^^^^ If ->hcon is NULL\n\n1360                             test_bit(HCI_CONN_PA_SYNC,\n                                         &pi->conn->hcon->flags)) {\n1361                                 iso_conn_big_sync(sk);\n1362                                 sk->sk_state = BT_LISTEN;\n1363                         } else {\n--> 1364                         iso_conn_defer_accept(pi->conn->hcon);\n                                                       ^^^^^^^^^^^^^^\n                                                       then we're toast\n\n1365                                 sk->sk_state = BT_CONFIG;\n1366                         }\n1367                         release_sock(sk);\n1368                         return 0;\n1369                 case BT_CONNECTED:\n1370                         if (test_bit(BT_SK_PA_SYNC,",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-42141"
                }
            ]
        }
    ]
}