{
    "type": "bundle",
    "id": "bundle--5c96b435-8e6f-43ac-928f-09d53ea13382",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--2578eec4-a488-4c50-b306-b673cbb93294",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-10-21T21:18:34.745897Z",
            "modified": "2024-10-21T21:18:34.745897Z",
            "name": "CVE-2022-49001",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nriscv: fix race when vmap stack overflow\n\nCurrently, when detecting vmap stack overflow, riscv firstly switches\nto the so called shadow stack, then use this shadow stack to call the\nget_overflow_stack() to get the overflow stack. However, there's\na race here if two or more harts use the same shadow stack at the same\ntime.\n\nTo solve this race, we introduce spin_shadow_stack atomic var, which\nwill be swap between its own address and 0 in atomic way, when the\nvar is set, it means the shadow_stack is being used; when the var\nis cleared, it means the shadow_stack isn't being used.\n\n[Palmer: Add AQ to the swap, and also some comments.]",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-49001"
                }
            ]
        }
    ]
}