{
    "type": "bundle",
    "id": "bundle--cd6c7581-cc7d-435f-9272-da1daea728eb",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--6a16220c-e723-446c-a543-2cce2119b97a",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2022-02-23T00:04:19.79582Z",
            "modified": "2022-02-23T00:04:19.79582Z",
            "name": "CVE-2022-21657",
            "description": "Envoy is an open source edge and service proxy, designed for cloud-native applications. In affected versions Envoy does not restrict the set of certificates it accepts from the peer, either as a TLS client or a TLS server, to only those certificates that contain the necessary extendedKeyUsage (id-kp-serverAuth and id-kp-clientAuth, respectively). This means that a peer may present an e-mail certificate (e.g. id-kp-emailProtection), either as a leaf certificate or as a CA in the chain, and it will be accepted for TLS. This is particularly bad when combined with the issue described in pull request #630, in that it allows a Web PKI CA that is intended only for use with S/MIME, and thus exempted from audit or supervision, to issue TLS certificates that will be accepted by Envoy. As a result Envoy will trust upstream certificates that should not be trusted. There are no known workarounds to this issue. Users are advised to upgrade.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-21657"
                }
            ]
        }
    ]
}