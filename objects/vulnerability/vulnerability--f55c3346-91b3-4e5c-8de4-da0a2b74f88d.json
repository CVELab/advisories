{
    "id": "bundle--b6f5dfd7-a8e9-4ce0-8562-82b1b0917086",
    "objects": [
        {
            "created": "2021-03-13T20:12:23.195751Z",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "description": "A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured.",
            "external_references": [
                {
                    "external_id": "CVE-2020-8908",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--f55c3346-91b3-4e5c-8de4-da0a2b74f88d",
            "modified": "2021-11-22T14:54:52.900149Z",
            "name": "CVE-2020-8908",
            "spec_version": "2.1",
            "type": "vulnerability"
        }
    ],
    "type": "bundle"
}