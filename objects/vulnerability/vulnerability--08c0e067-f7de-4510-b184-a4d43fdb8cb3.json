{
    "id": "bundle--8b4b2968-fa9e-404d-be36-3c9fbfeb399f",
    "objects": [
        {
            "created": "2021-03-13T20:12:00.207791Z",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "description": "Waitress through version 1.3.1 implemented a \"MAY\" part of the RFC7230 which states: \"Although the line terminator for the start-line and header fields is the sequence CRLF, a recipient MAY recognize a single LF as a line terminator and ignore any preceding CR.\" Unfortunately if a front-end server does not parse header fields with an LF the same way as it does those with a CRLF it can lead to the front-end and the back-end server parsing the same HTTP message in two different ways. This can lead to a potential for HTTP request smuggling/splitting whereby Waitress may see two requests while the front-end server only sees a single HTTP message. This issue is fixed in Waitress 1.4.0.",
            "external_references": [
                {
                    "external_id": "CVE-2019-16785",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--08c0e067-f7de-4510-b184-a4d43fdb8cb3",
            "modified": "2021-11-22T14:54:52.900149Z",
            "name": "CVE-2019-16785",
            "spec_version": "2.1",
            "type": "vulnerability"
        }
    ],
    "type": "bundle"
}