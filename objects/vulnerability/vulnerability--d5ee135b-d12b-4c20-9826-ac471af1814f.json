{
    "id": "bundle--f263de82-b985-4423-8059-df28f2ceb1f8",
    "objects": [
        {
            "created": "2021-03-13T20:11:24.325486Z",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "description": "curl supports \"globbing\" of URLs, in which a user can pass a numerical range to have the tool iterate over those numbers to do a sequence of transfers. In the globbing function that parses the numerical range, there was an omission that made curl read a byte beyond the end of the URL if given a carefully crafted, or just wrongly written, URL. The URL is stored in a heap based buffer, so it could then be made to wrongly read something else instead of crashing. An example of a URL that triggers the flaw would be `http://ur%20[0-60000000000000000000`.",
            "external_references": [
                {
                    "external_id": "CVE-2017-1000101",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--d5ee135b-d12b-4c20-9826-ac471af1814f",
            "modified": "2021-12-01T16:19:51.601791Z",
            "name": "CVE-2017-1000101",
            "spec_version": "2.1",
            "type": "vulnerability"
        }
    ],
    "type": "bundle"
}