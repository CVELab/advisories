{
    "type": "bundle",
    "id": "bundle--4456629c-3ed8-42e0-9a4e-b4c266ee9f4f",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--a78887ef-2b8a-4d45-b6e9-cf63a8648a58",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-01-05T17:16:40.486341Z",
            "modified": "2024-01-05T17:16:40.486341Z",
            "name": "CVE-2023-34323",
            "description": "When a transaction is committed, C Xenstored will first check\nthe quota is correct before attempting to commit any nodes.  It would\nbe possible that accounting is temporarily negative if a node has\nbeen removed outside of the transaction.\n\nUnfortunately, some versions of C Xenstored are assuming that the\nquota cannot be negative and are using assert() to confirm it.  This\nwill lead to C Xenstored crash when tools are built without -DNDEBUG\n(this is the default).\n",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2023-34323"
                }
            ]
        }
    ]
}