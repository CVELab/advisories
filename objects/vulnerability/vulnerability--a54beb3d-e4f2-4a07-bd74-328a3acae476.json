{
    "type": "bundle",
    "id": "bundle--60a9c218-e5f0-44e5-82c2-00274d418298",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--a54beb3d-e4f2-4a07-bd74-328a3acae476",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2022-07-01T00:06:17.296085Z",
            "modified": "2022-07-01T00:06:17.296085Z",
            "name": "CVE-2013-4170",
            "description": "In general, Ember.js escapes or strips any user-supplied content before inserting it in strings that will be sent to innerHTML. However, the `tagName` property of an `Ember.View` was inserted into such a string without being sanitized. This means that if an application assigns a view's `tagName` to user-supplied data, a specially-crafted payload could execute arbitrary JavaScript in the context of the current domain (\"XSS\"). This vulnerability only affects applications that assign or bind user-provided content to `tagName`.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2013-4170"
                }
            ]
        }
    ]
}