{
    "id": "bundle--1741a051-7801-4df4-a602-bf9421d4a004",
    "objects": [
        {
            "created": "2021-03-13T20:11:19.381245Z",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "description": "The malloc function in the GNU C Library (aka glibc or libc6) 2.26 could return a memory block that is too small if an attempt is made to allocate an object whose size is close to SIZE_MAX, potentially leading to a subsequent heap overflow. This occurs because the per-thread cache (aka tcache) feature enables a code path that lacks an integer overflow check.",
            "external_references": [
                {
                    "external_id": "CVE-2017-17426",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--5c538e6a-cb65-409e-a176-f558ae72647f",
            "modified": "2021-11-22T14:54:52.900149Z",
            "name": "CVE-2017-17426",
            "spec_version": "2.1",
            "type": "vulnerability"
        }
    ],
    "type": "bundle"
}