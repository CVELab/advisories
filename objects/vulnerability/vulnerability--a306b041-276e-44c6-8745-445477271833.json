{
    "type": "bundle",
    "id": "bundle--16c36a29-c625-412c-9314-b4a5d04b0fb2",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--a306b041-276e-44c6-8745-445477271833",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2022-12-28T00:05:38.29568Z",
            "modified": "2022-12-28T00:05:38.29568Z",
            "name": "CVE-2022-41966",
            "description": "XStream serializes Java objects to XML and back again. Versions prior to 1.4.20 may allow a remote attacker to terminate the application with a stack overflow error, resulting in a denial of service only via manipulation the processed input stream. The attack uses the hash code implementation for collections and maps to force recursive hash calculation causing a stack overflow. This issue is patched in version 1.4.20 which handles the stack overflow and raises an InputManipulationException instead. A potential workaround for users who only use HashMap or HashSet and whose XML refers these only as default map or set, is to change the default implementation of java.util.Map and java.util per the code example in the referenced advisory. However, this implies that your application does not care about the implementation of the map and all elements are comparable.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-41966"
                }
            ]
        }
    ]
}