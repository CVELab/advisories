{
    "id": "bundle--aa59b153-8040-4efc-96e6-2acd72aa0f55",
    "objects": [
        {
            "created": "2021-03-13T20:13:01.909933Z",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "description": "An issue was discovered in phpLiteAdmin 1.9.5 through 1.9.7.1. Due to loose comparison with '==' instead of '===' in classes/Authorization.php for the user-provided login password, it is possible to login with a simpler password if the password has the form of a power in scientific notation (like '2e2' for '200' or '0e1234' for '0'). This is possible because, in the loose comparison case, PHP interprets the string as a number in scientific notation, and thus converts it to a number. After that, the comparison with '==' casts the user input (e.g., the string '200' or '0') to a number, too. Hence the attacker can login with just a '0' or a simple number he has to brute force. Strong comparison with '===' prevents the cast into numbers.",
            "external_references": [
                {
                    "external_id": "CVE-2018-10362",
                    "source_name": "cve"
                }
            ],
            "id": "vulnerability--7ea4f93b-4022-420e-9869-841db3e99858",
            "modified": "2021-11-22T14:54:52.900149Z",
            "name": "CVE-2018-10362",
            "spec_version": "2.1",
            "type": "vulnerability"
        }
    ],
    "type": "bundle"
}