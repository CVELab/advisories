{
    "type": "bundle",
    "id": "bundle--6d2fde6e-7b47-4dfe-9e6f-5a3da588dd81",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--483cb5a8-58aa-4ecc-b54e-4aa01a570cc2",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-02-27T19:12:49.256368Z",
            "modified": "2024-02-27T19:12:49.256368Z",
            "name": "CVE-2021-46971",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nperf/core: Fix unconditional security_locked_down() call\n\nCurrently, the lockdown state is queried unconditionally, even though\nits result is used only if the PERF_SAMPLE_REGS_INTR bit is set in\nattr.sample_type. While that doesn't matter in case of the Lockdown LSM,\nit causes trouble with the SELinux's lockdown hook implementation.\n\nSELinux implements the locked_down hook with a check whether the current\ntask's type has the corresponding \"lockdown\" class permission\n(\"integrity\" or \"confidentiality\") allowed in the policy. This means\nthat calling the hook when the access control decision would be ignored\ngenerates a bogus permission check and audit record.\n\nFix this by checking sample_type first and only calling the hook when\nits result would be honored.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2021-46971"
                }
            ]
        }
    ]
}