{
    "type": "bundle",
    "id": "bundle--8ebe03e3-e010-45d3-a209-a40efecff3c4",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--f13fb87e-c72c-49f3-bdba-ff73da51b500",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2022-11-02T00:06:00.093065Z",
            "modified": "2022-11-02T00:06:00.093065Z",
            "name": "CVE-2022-42317",
            "description": "Xenstore: guests can let run xenstored out of memory T[his CNA information record relates to multiple CVEs; the text explains which aspects/vulnerabilities correspond to which CVE.] Malicious guests can cause xenstored to allocate vast amounts of memory, eventually resulting in a Denial of Service (DoS) of xenstored. There are multiple ways how guests can cause large memory allocations in xenstored: - - by issuing new requests to xenstored without reading the responses, causing the responses to be buffered in memory - - by causing large number of watch events to be generated via setting up multiple xenstore watches and then e.g. deleting many xenstore nodes below the watched path - - by creating as many nodes as allowed with the maximum allowed size and path length in as many transactions as possible - - by accessing many nodes inside a transaction",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-42317"
                }
            ]
        }
    ]
}