{
    "type": "bundle",
    "id": "bundle--f0c36a85-a088-4c1c-b7be-e0e50c8283d1",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--f8558c3a-2ffc-40d0-8d08-d96dc0bcdaaf",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2022-09-08T00:07:01.026434Z",
            "modified": "2022-09-08T00:07:01.026434Z",
            "name": "CVE-2022-36079",
            "description": "Parse Server is an open source backend that can be deployed to any infrastructure that can run Node.js. Internal fields (keys used internally by Parse Server, prefixed by `_`) and protected fields (user defined) can be used as query constraints. Internal and protected fields are removed by Parse Server and are only returned to the client using a valid master key. However, using query constraints, these fields can be guessed by enumerating until Parse Server, prior to versions 4.10.14 or 5.2.5, returns a response object. The patch available in versions 4.10.14 and 5.2.5 requires the maser key to use internal and protected fields as query constraints. As a workaround, implement a Parse Cloud Trigger `beforeFind` and manually remove the query constraints.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-36079"
                }
            ]
        }
    ]
}