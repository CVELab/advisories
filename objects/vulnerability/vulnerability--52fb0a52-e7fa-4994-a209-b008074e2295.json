{
    "type": "bundle",
    "id": "bundle--375960ce-a2bc-4bab-b8d8-14ee2562d33f",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--52fb0a52-e7fa-4994-a209-b008074e2295",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2022-11-02T00:06:00.032473Z",
            "modified": "2022-11-02T00:06:00.032473Z",
            "name": "CVE-2022-42324",
            "description": "Oxenstored 32->31 bit integer truncation issues Integers in Ocaml are 63 or 31 bits of signed precision. The Ocaml Xenbus library takes a C uint32_t out of the ring and casts it directly to an Ocaml integer. In 64-bit Ocaml builds this is fine, but in 32-bit builds, it truncates off the most significant bit, and then creates unsigned/signed confusion in the remainder. This in turn can feed a negative value into logic not expecting a negative value, resulting in unexpected exceptions being thrown. The unexpected exception is not handled suitably, creating a busy-loop trying (and failing) to take the bad packet out of the xenstore ring.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-42324"
                }
            ]
        }
    ]
}